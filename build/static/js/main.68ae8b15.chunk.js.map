{"version":3,"sources":["components/MoodStrip/MoodStrip.jsx","App.js","index.js"],"names":["MoodStrip","className","_getToken","a","fetch","method","headers","btoa","clientId","body","result","json","data","token","access_token","__getGenres","categories","genres","console","log","items","__getPlayList","category_id","playlist","TrackSmallThumbnail","props","track","name","description","xmlns","viewBox","id","d","fill","App","useState","isExpandView","setIsExpandView","viewClass","setViewClass","isExpandModel","setIsExpandModel","modelClass","setModelClass","setGenres","setCurrentPlaylist","setCurrentPlaylistTracks","playlistTracksHtml","setPlaylistTracksHtml","expandView","expandModel","useEffect","genreList","getGenreList","then","genreData","genresHtml","map","genre","onClick","playlistt","getPlaylist","playlistData","playlistTracks","playlists","playlistTracksHtmlTemp","style","backgroundImage","icons","url","type","width","height","x1","y1","x2","y2","stroke","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68ae8b15.chunk.js","sourcesContent":["import React from 'react'\n\nfunction MoodStrip() {\n    return (\n        <div className=\"mood\">\n          <div className=\"label-sub\"><h3>Some kind of play list</h3></div>\n          <div className=\"mood-strip\">\n            <div className=\"song\">Pop Lorem, ipsum.</div>\n            <div className=\"song\">Hip Pop Lorem.</div>\n            <div className=\"song\">EDM</div>\n            <div className=\"song\">Jazz Lorem, ipsum dolor.</div>\n            <div className=\"song\">Trance</div>\n            <div className=\"song\">Classic</div>\n          </div>\n        </div>\n    )\n}\n\nexport default MoodStrip\n","import { useEffect, useState } from 'react'\nimport './App.scss'\nimport MoodStrip from './components/MoodStrip/MoodStrip';\n    // Components\n    const clientId = '71718d4539da4aa09be9d0d9acd95472';\n    const clientSecret = '55790833a6d5444fbf93400c887d0144';\n\n    // private methods\n\n    // get TOKEN from spotify account\n    // returns token string\n    const _getToken = async () => {\n        //fetch call\n        const result = await fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/x-www-form-urlencoded', \n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n            },\n            body: 'grant_type=client_credentials'\n        });\n        const data = await result.json();\n        const token =data.access_token;\n        return token;\n    }\n    const __getGenres = async () => {\n      // #️⃣  receving token from spotify\n      const token = await _getToken();\n      // 🕊 fetch call - categories\n      const categories = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n        method: 'GET',\n        headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      //calling categories API 🕊   and parsing\n      const genres = await categories.json();\n      console.log(genres.categories.items);\n      //\n      //CATEGORY ARRAY\n      return genres.categories.items;\n    }\n    const __getPlayList = async (category_id) => {\n\n      // #️⃣  receving token from spotify\n      const token = await _getToken();\n      // 🕊 fetch call - playlist\n      const result = await fetch(`https://api.spotify.com/v1/browse/categories/${category_id}/playlists`, {\n        method: 'GET',\n         headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n\n      //calling playlist API 🕊   and parsing\n      const playlist = await result.json();\n      console.log(playlist);\n      //\n      //PLAYLIST ARRAY\n      return playlist;\n    }\n    \n\n\nfunction App() {\n\n  // 📦 STATES\n\n  // view\n  const [isExpandView, setIsExpandView] = useState(true)\n  const [viewClass, setViewClass] = useState('')\n  // model\n  const [isExpandModel, setIsExpandModel] = useState(true)\n  const [modelClass, setModelClass] = useState('')\n  //Genres\n  const [genres, setGenres] = useState([])\n  //\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\n  const [currentPlaylistTracks, setCurrentPlaylistTracks] = useState([]);\n  const [playlistTracksHtml, setPlaylistTracksHtml] = useState();\n\n  //FUNCTIONS\n\n  const expandView =  () => {\n    // 🔁 expand state TRANSPOSED\n    setIsExpandView(!isExpandView)\n    // reaction class CHANGE\n    setViewClass(isExpandView ? \"expand\" : '')\n  }\n  const expandModel =  () => {\n    // 🔁 expand state TRANSPOSED\n    setIsExpandModel(!isExpandModel)\n    // reaction class CHANGE\n    setModelClass(isExpandModel ? \"expand\" : '')\n\n  }\n\n  useEffect(() => {\n    // 📦  Storing genre list for set state\n    const getGenreList = async () => {\n      //🧲 reciving genre list through API  via __getGenres call\n      const genreList = await __getGenres();\n      //console.log(genreList)\n      return genreList;\n    }\n    //  📦 genre set state\n    getGenreList().then((genreData)=>{\n      // 📦\n      setGenres(genreData)\n    })\n    return () => {\n    }\n  }, []);\n\n  // 💀 Genre strip HTML\n  const genresHtml = genres.map(genre => {\n    return <div className=\"genre\"\n      onClick={()=>{\n          expandView();\n          console.log(genre)\n          // setSTATE current playlist to clicked genre\n          setCurrentPlaylist(genre);\n          //  GET  playlist \n          const getPlaylist = async () => {\n            const playlistt = await __getPlayList(genre.id);\n            return playlistt;\n          }\n          // 🧲 get playlist call\n          getPlaylist()\n          .then((playlistData)=>{\n            let playlistTracks = playlistData.playlists.items\n            // 📦 setSTATE Playlist tracks data \n            setCurrentPlaylistTracks(playlistTracks);\n\n            // 💀 Playlist Tracks - COMPONENT\n            const playlistTracksHtmlTemp = playlistTracks.map(track => {\n              return <TrackSmallThumbnail track={track}/>\n            })\n            // 📦 setSTATE Playlist Track markup\n            setPlaylistTracksHtml(playlistTracksHtmlTemp)\n          })\n          \n      }}>\n        <div className=\"genre-icon\" style={{backgroundImage: `url(${genre.icons[0].url})`}}></div>\n        {genre.name}\n      </div>\n  })\n\n  return (\n    <div className=\"App\">\n      <div className=\"home\">\n\n        <div className=\"search\">\n          <input type=\"text\" name=\"Search\" id=\"search-home\" \n          onClick={()=>{expandView();}}/>\n        </div>\n        <div className=\"genres\">\n          <div className=\"label-sub\"><h3>Top Genres</h3></div>\n          <div className=\"genres-list\">\n            {genresHtml}\n          </div>\n        </div>\n        \n        <div className=\"shelf-divider\"></div>\n        \n        <MoodStrip></MoodStrip>\n        <MoodStrip></MoodStrip>\n        <MoodStrip></MoodStrip>\n      </div>\n      <div className={`view playlist ${viewClass}`}>\n        <div className=\"view__head\">\n          <div className=\"back\" \n          onClick={()=>{expandView();}}>)</div>\n        </div>\n        <div className=\"view__body\">\n          <div className=\"playlist\" \n          onClick={()=>{expandModel()}}>\n            {playlistTracksHtml}\n          </div>\n        </div>\n      </div>\n      <div className={`model player ${modelClass}`}>\n        <div className=\"model__head\">\n          <div className=\"back\" \n          onClick={()=>{expandModel()}}>)</div></div>\n        <div className=\"model__body\">\n          <div className=\"track\">\n            <div className=\"album-artwork\">\n            </div>\n            <div className=\"track-name\">\n              <div className=\"spotify-logo\">\n              \n              </div>\n              \n              <p>Track Name ipsm</p>\n              <p className=\"artist\">Lorem ipsum</p>\n            </div>\n            <div className=\"play-controls\">\n              <div className=\"progress-bar\">\n                <div className=\"progress\"></div>\n                <div className=\"progress-time\">\n                  <div className=\"current-time\">3.21</div>\n                  <div className=\"remaining-time\">-2.01</div>\n                </div>\n              </div>\n              <div className=\"main-controls\">\n                <div className=\"controls\">\n                  <div className=\"control\"></div>\n                  <div className=\"control\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\n                    <path xmlns=\"http://www.w3.org/2000/svg\" id=\"Video_Play\" data-name=\"Video Play\" d=\"M12.5,0A12.5,12.5,0,1,0,25,12.5,12.52,12.52,0,0,0,12.5,0Zm5.26,12.92-8,5A.56.56,0,0,1,9.5,18a.5.5,0,0,1-.24-.06A.51.51,0,0,1,9,17.5V7.5a.51.51,0,0,1,.26-.44.49.49,0,0,1,.51,0l8,5a.49.49,0,0,1,0,.84Z\" fill=\"#0e1d25\"/>\n                  </svg>\n                  </div>\n                  <div className=\"control next\">\n                  <svg width=\"327\" height=\"327\" viewBox=\"0 0 327 327\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M102.605 75.993C102.486 69.8357 109.077 65.8586 114.469 68.8341L269.731 154.517C275.123 157.492 275.271 165.189 269.999 168.37L118.164 259.99C112.891 263.172 106.152 259.453 106.033 253.295L102.605 75.993Z\" fill=\"black\"/>\n                    <line x1=\"271.5\" y1=\"66.5\" x2=\"271.5\" y2=\"258.5\" stroke=\"black\" stroke-width=\"33\" stroke-linecap=\"round\"/>\n                  </svg>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\nfunction TrackSmallThumbnail(props) {\n  let track = props.track;\n  return (\n      \n    <div className=\"track\">\n    <div className=\"album-artwork\"></div>\n    <div className=\"track-name\">\n      <p>{track.name}</p>\n      <p className=\"artist\">{track.description}</p>\n    </div>\n    <div className=\"play-button\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\n    <path xmlns=\"http://www.w3.org/2000/svg\" id=\"Video_Play\" data-name=\"Video Play\" d=\"M12.5,0A12.5,12.5,0,1,0,25,12.5,12.52,12.52,0,0,0,12.5,0Zm5.26,12.92-8,5A.56.56,0,0,1,9.5,18a.5.5,0,0,1-.24-.06A.51.51,0,0,1,9,17.5V7.5a.51.51,0,0,1,.26-.44.49.49,0,0,1,.51,0l8,5a.49.49,0,0,1,0,.84Z\" fill=\"#0e1d25\"/>\n    </svg>\n    </div>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}